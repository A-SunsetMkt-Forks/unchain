name: Release

on:
  push:
    tags:
      - 'v*' # 触发条件：当有以 'v' 开头的标签推送到仓库时触发

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64  # Windows on ARM64 is less common
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'  # 使用你的 Go 版本

      - name: Build executable
        id: build
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -ldflags="-s -w" -o bin/${{ matrix.goos }}-${{ matrix.goarch }}/unchain cmd/node/main.go
          echo "OUTPUT_DIR=bin/${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_OUTPUT

      - name: Create archive
        run: |
          cd bin/${{ matrix.goos }}-${{ matrix.goarch }}
          if [[ "${{ matrix.goos }}" == "windows" ]]; then
            zip unchain.zip unchain.exe
          else
            tar -czvf unchain.tar.gz unchain
          fi
          echo "ARCHIVE_NAME=$(ls *.zip *.tar.gz)" >> $GITHUB_OUTPUT
        id: archive

      - name: Upload archive to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: bin/${{ matrix.goos }}-${{ matrix.goarch }}/${{ steps.archive.outputs.ARCHIVE_NAME }}
          asset_name: unchain-${{ matrix.goos }}-${{ matrix.goarch }}.${{ steps.archive.outputs.ARCHIVE_NAME}}
          asset_content_type: application/octet-stream

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false